import logging

from pyrogram import Client
from pyrogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
    ReplyKeyboardRemove, User, Message

from db.modify_tables import execute_query, get_reminder_time_db
from utils.utils import is_valid_user


logger = logging.getLogger(__name__)


def get_main_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("üò¥ –°–æ–Ω"), KeyboardButton("üåÖ –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ")],
            [KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
            [KeyboardButton("üîï –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ"), KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")],
            [KeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞"), KeyboardButton("üí° –°–æ–≤–µ—Ç –ø–æ —Å–Ω—É")],
            [KeyboardButton("‚≠êÔ∏è –û—Ü–µ–Ω–∫–∞ —Å–Ω–∞"), KeyboardButton("üéØ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–∏ —Å–Ω–∞")],
            [KeyboardButton("ü•≥ –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"), KeyboardButton("üóÉ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")],
            [KeyboardButton("‚öôÔ∏è –ú–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_initial_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚öôÔ∏è –ú–µ–Ω—é"), KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_back_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    return keyboard


def main_menu_keyboard():
    keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üò¥ –°–æ–Ω", callback_data="sleep"),
            InlineKeyboardButton("üåÖ –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ", callback_data="wake")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞", callback_data="sleep_chart")
        ],
        [
            InlineKeyboardButton("üéØ –¶–µ–ª–∏ —Å–Ω–∞", callback_data="sleep_goals"),
            InlineKeyboardButton("üí§ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Å–Ω–∞", callback_data="sleep_characteristics")
        ],
        [
            InlineKeyboardButton("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="reminders"),
            InlineKeyboardButton("üí° –°–æ–≤–µ—Ç—ã –ø–æ —Å–Ω—É", callback_data="sleep_tips")
        ],
        [
            InlineKeyboardButton("üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã", callback_data="weather"),
            InlineKeyboardButton("üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è", callback_data="set_wake_time")
        ],
        [
            InlineKeyboardButton("üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏", callback_data="user_data_management"),
            InlineKeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞", callback_data="request_contact")
        ]
    ])
    return keyboard


def character_keyboard():
    keyboard = InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üòä –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", callback_data="rate_mood")],
            [InlineKeyboardButton("üõå –û—Ü–µ–Ω–∫–∞ —Å–Ω–∞", callback_data="rate_sleep")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    return keyboard


def data_management_keyboard():
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", callback_data="save_data")],
            [InlineKeyboardButton("üóë –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", callback_data="delete_data")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )


async def send_main_menu(client: Client, chat_id: int):
    await client.send_message(
        chat_id=chat_id,
        text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
        reply_markup=ReplyKeyboardRemove()
    )
    await client.send_message(
        chat_id=chat_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard()
    )


async def show_sleep_characteristics_menu(client: Client, user_id: int):
    await client.send_message(
        chat_id=user_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É —Å–Ω–∞:",
        reply_markup=character_keyboard()
    )


async def show_user_data_management_menu(client: Client, user_id: int):
    await client.send_message(
        chat_id=user_id,
        text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
        reply_markup=data_management_keyboard()
    )


async def show_reminders_menu(client: Client, message: Message, user: User = None):
    if user is None:
        user = message.from_user
    try:
        is_valid_user(user)
    except Exception as e:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º: {e}")
    user_id = user.id

    try:
        reminders_record = get_reminder_time_db(user_id)
        if reminders_record:
            reminder_time = reminders_record['reminder_time']
            text = f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {reminder_time}."
            keyboard = InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="set_reminder"),
                    InlineKeyboardButton("üîï –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="reset_reminder")
                ],
                [
                    InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_menu")
                ]
            ])
        else:
            text = "–£ –≤–∞—Å –Ω–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è."
            keyboard = InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="set_reminder"),
                ],
                [
                    InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_menu")
                ]
            ])
        await message.reply_text(text, reply_markup=ReplyKeyboardRemove())
        await client.send_message(
            chat_id=user_id,
            text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f'–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')
        await message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥")


async def request_contact(client: Client, message: Message):
    contact_button = KeyboardButton(
        text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        request_contact=True
    )
    return_button = KeyboardButton("‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è")
    reply_markup = ReplyKeyboardMarkup(
        [[return_button, contact_button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=reply_markup
    )


async def request_location(client: Client, message: Message):
    location_button = KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
    reply_markup = ReplyKeyboardMarkup([[KeyboardButton('‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è'), location_button]],
                                       resize_keyboard=True, one_time_keyboard=True)
    await message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã —è –º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≥–æ—Ä–æ–¥.",
                             reply_markup=reply_markup)


if __name__ == "__main__":
    pass
