import logging

from pyrogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


logger = logging.getLogger(__name__)


def get_main_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("üò¥ –°–æ–Ω"), KeyboardButton("üåÖ –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ")],
            [KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
            [KeyboardButton("üîï –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ"), KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")],
            [KeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞"), KeyboardButton("üí° –°–æ–≤–µ—Ç –ø–æ —Å–Ω—É")],
            [KeyboardButton("‚≠êÔ∏è –û—Ü–µ–Ω–∫–∞ —Å–Ω–∞"), KeyboardButton("üéØ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–∏ —Å–Ω–∞")],
            [KeyboardButton("ü•≥ –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"), KeyboardButton("üóÉ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")],
            [KeyboardButton("‚öôÔ∏è –ú–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_initial_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚öôÔ∏è –ú–µ–Ω—é"), KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_back_keyboard():
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    return keyboard


def main_menu_keyboard():
    keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üò¥ –°–æ–Ω", callback_data="sleep"),
            InlineKeyboardButton("üåÖ –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ", callback_data="wake")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞", callback_data="sleep_chart")
        ],
        [
            InlineKeyboardButton("üéØ –¶–µ–ª–∏ —Å–Ω–∞", callback_data="sleep_goals"),
            InlineKeyboardButton("üí§ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Å–Ω–∞", callback_data="sleep_characteristics")
        ],
        [
            InlineKeyboardButton("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="reminders"),
            InlineKeyboardButton("üí° –°–æ–≤–µ—Ç—ã –ø–æ —Å–Ω—É", callback_data="sleep_tips")
        ],
        [
            InlineKeyboardButton("üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã", callback_data="weather"),
            InlineKeyboardButton("üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è", callback_data="set_wake_time")
        ],
        [
            InlineKeyboardButton("üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏", callback_data="user_data_management"),
            InlineKeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞", callback_data="request_contact")
        ]
    ])
    return keyboard


def get_reminder_menu_keyboard(set_reminder: bool = True):
    if set_reminder:
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="set_reminder"),
                InlineKeyboardButton("üîï –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="reset_reminder")
            ],
            [
                InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_menu")
            ]
        ])
    else:
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="set_reminder"),
            ],
            [
                InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_menu")
            ]
        ])
    return keyboard


def character_keyboard():
    keyboard = InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üòä –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", callback_data="rate_mood")],
            [InlineKeyboardButton("üõå –û—Ü–µ–Ω–∫–∞ —Å–Ω–∞", callback_data="rate_sleep")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    return keyboard


def data_management_keyboard():
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", callback_data="save_data")],
            [InlineKeyboardButton("üóë –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", callback_data="delete_data")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )


def get_request_keyboard(contex: str):
    if contex.lower() not in {"contact", "location", "weather"}:
        raise ValueError("–î–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ, "
                         "–≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç")

    return_button = KeyboardButton("‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è")
    if contex.lower() == "contact":
        contact_button = KeyboardButton(
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            request_contact=True
        )
        reply_markup = ReplyKeyboardMarkup(
            [[return_button, contact_button]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    elif contex.lower() == "location":
        location_button = KeyboardButton(
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
            request_location=True
        )
        reply_markup = ReplyKeyboardMarkup(
            [[return_button, location_button]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    elif contex.lower() == "weather":
        reply_markup = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_menu"),
             InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –ø–æ —Å–Ω—É", callback_data="sleep_tips")]
        ])
    else:
        reply_markup = ReplyKeyboardMarkup([[KeyboardButton("üîô –ù–∞–∑–∞–¥")]],
                            resize_keyboard=True,
                            one_time_keyboard=True)

    return reply_markup


if __name__ == "__main__":
    pass
